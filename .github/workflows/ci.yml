name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  build:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20]

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Setup Node.js and cache dependencies
      - name: Setup Node.js | ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm run test

      # Build the project (if applicable)
      - name: Build project
        run: npm run build

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate Tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::322462248532:role/ecr_role'
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build docker image
        id: build-docker-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/nestjs_docker_rocketeseat:$TAG .
          docker push $REGISTRY/nestjs_docker_rocketeseat:$TAG
          docker tag $REGISTRY/nestjs_docker_rocketeseat:$TAG $REGISTRY/nestjs_docker_rocketeseat:latest
          docker push $REGISTRY/nestjs_docker_rocketeseat:latest
          IMAGE=$(echo $REGISTRY/nestjs_docker_rocketeseat:$TAG)
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: nestjs_docker_rocketseat
          image: ${{ steps.build-docker-image.outputs.image }}
          access-role-arn: arn:aws:iam::322462248532:role/app-runner-role
          region: us-east-1
          cpu: 1
          memory: 2
          port: 3000
          wait-for-service-stability-seconds: 600

      - name: App Runner Check
        run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"
